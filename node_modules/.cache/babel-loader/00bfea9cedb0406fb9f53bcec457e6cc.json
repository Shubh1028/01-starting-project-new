{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Personal Project\\\\01-starting-project-new\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.childre\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","childre"],"sources":["C:/Users/hp/Desktop/Personal Project/01-starting-project-new/src/store/auth-context.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst AuthContext =  React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin: (email,password) => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\r\n    \r\n        if (storedUserLoggedInInformation === '1') {\r\n          setIsLoggedIn(true);\r\n        }\r\n      }, []);\r\n\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n        setIsLoggedIn(false)\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1');\r\n        setIsLoggedIn(true)\r\n    }\r\n\r\n\r\n    return <AuthContext.Provider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>\r\n        {props.childre}\r\n    </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,WAAW,gBAAIH,KAAK,CAACI,aAAN,CAAoB;EACrCC,UAAU,EAAE,KADyB;EAErCC,QAAQ,EAAE,MAAM,CAAE,CAFmB;EAGrCC,OAAO,EAAE,CAACC,KAAD,EAAOC,QAAP,KAAoB,CAAE;AAHM,CAApB,CAArB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAE1C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMW,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;IAEA,IAAIF,6BAA6B,KAAK,GAAtC,EAA2C;MACzCD,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CANM,EAMJ,EANI,CAAT;;EAQA,MAAMI,aAAa,GAAG,MAAM;IACxBF,YAAY,CAACG,UAAb,CAAwB,YAAxB;IACAL,aAAa,CAAC,KAAD,CAAb;EACH,CAHD;;EAKA,MAAMM,YAAY,GAAG,MAAM;IACvBJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAP,aAAa,CAAC,IAAD,CAAb;EACH,CAHD;;EAMA,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAACP,UAAU,EAAEA,UAAb;MAAyBC,QAAQ,EAAEU,aAAnC;MAAkDT,OAAO,EAAEW;IAA3D,CAA7B;IAAA,UACFP,KAAK,CAACS;EADJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAGH,CA1BM;;GAAMV,mB;;KAAAA,mB;AA4Bb,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}